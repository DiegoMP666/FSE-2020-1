FSE 2020-1 -- Practica 3 (Práctica 2-Raspberry)

Nombres de los integrantes:
- Garrido López Luis Enrique
- Gutiérrez García Sofía Malinalli
- Mora Palacios Diego Andreé

Comentarios y Respuestas a las preguntas:

Ejercicio 2 Punto 4:
Investigue la instrucción swi, sus parámetros y su función dentro de un programa .s 

R = Sirve cuando nos comunicamos directamente con el kernel vía llamada del sistema.
Sus parámetros son: los de Linux system call table

A)  Cuál es la diferencia entre las instrucciones swi 0x0, svc #0 y bx lr?

Swi 0x0 llamada al kernel del sistema ‘write’

WI

This section contains the following subsections:

• SWI

• BKPT on page 5-38.

Software interrupt.

Syntax

SWI immed_8

where:

immed_8 is a numeric expression evaluating to an integerin the range 0-255.

Usage

The SWI instruction causes a SWI exception. This means that the processor state changes to ARM, the processor mode changes to Supervisor, the CPSR is saved to the Supervisor Mode SPSR, and execution branches to the SWI vector (see the Handling Processor Exceptions chapter in ADS Developer Guide).

immed_8 is ignored by the processor. However, it is present in bits[7:0] of the instruction opcode. It can be retrieved by the exception handler to determine what service is being requested.

Svc

Supervisor Calls (SVC) are exceptions targeted at software and operating systems for generating system function calls. They are sometimes called software interrupts. For example, instead of allowing user programs to directly access hardware, an operating system may provide access to hardware through an SVC. So when a user program wants to use certain hardware, it generates the SVC exception using SVC instructions, and then the software exception handler in the operating system is executed and provides the requested service to the user application. In this way, access to hardware is under the control of the OS, which can provide a more robust system by preventing the user applications from directly accessing the hardware.

SVC function 0 is reserved for the CMSIS-RTOS RTX kernel

CMSIS-RTOS RTX is a royalty-free, deterministic real-time operating system implementing the CMSIS-RTOS API, a generic RTOS interface for Cortex-M processor-based devices. 


bx lr


bx stands for branch and exchange instruction set Which means that according to the lsb (least significant bit) of the address to branch to, the processor will treat the next instruction as ARM or as thumb.

As lr usually holds the return address, it means that this is a return from a function, and if the lsb of lr is 1, it will treat the code at that address as thumb, otherwise, it will treat it as ARM.


B) A que se reﬁere la instrucción .balign 4 en el lenguaje ensamblador para ARM?

Pad the location counter (in the current subsection) to a particular storage boundary. The first expression (which must be absolute) is the alignment request in bytes. For example `.balign 8' advances the location counter until it is a multiple of 8. If the location counter is already a multiple of 8, no change is needed.

C) Cuántas instrucciones en lenguaje ensamblador hay para la arquitectura ARM11 y cuantos modos de direccionamiento hay (nombrelos)?

Existen 2 sets de instrucciones para la ARM11, por lo que
pondremos los 2 sets con sus respectivos modos de 
direccionamiento.

Número de instrucciones del set "original":
5  Instrucciones Branch
16 Instrucciones de procesamiento de datos
21 Instrucciones de multiplicación
36 Instrucciones Aritmeticas Paralelas
12 Instrucciones sign/zero y Adición
10 Instrucciones Micelaneas
4  Instrucciones de registro de acceso al status
21 Instrucciones de Load y Store
2  Instrucciones de semáforo
2  Instrucciones de generación y excepción
7  Instrucciones del coprocesador

136 instrucciones en total.

Este set cuenta con 3 modos de direccionamiento, los cuales
son:
- Inmediato
- Registro
- Registro Escalado

Número de instrucciones del set "thumb":
5  Instrucciones Branch
36 Instrucciones de procesamiento de datos
21 Instrucciones de Load y Store
2  Instrucciones de generación y excepción

Este set cuenta con 5 modos de direccionamiento, los cuales
son:
- Data-processing operands
- Load and store word or unsigned byte
- Miscellaneous Loads and store
- Load and store multiple
- Load and store Coprocessor